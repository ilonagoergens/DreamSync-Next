name: CI/CD Workflow

on:
  push:
    branches: [main] # bei push auf die main

jobs:

  run-tests:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      JWT_SECRET: testsecret123
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js (Backend)
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./backend/package-lock.json

      - name: Install Dependencies (Backend)
        working-directory: ./backend
        run: npm install

      - name: Run Backend Tests
        working-directory: ./backend
        env:
          NODE_ENV: test
          JWT_SECRET: testsecret123
        run: npm run test:backend

      - name: Setup Node.js (Frontend)
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json

      - name: Install Dependencies (Frontend)
        working-directory: ./frontend
        run: npm install

      - name: Run Frontend Tests
        working-directory: ./frontend
        run: npm run test:frontend

  build-and-push:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Verify Azure Login
        run: az acr list --output json

      - name: Build and push Backend Image
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: Dockerfile.backend
          push: true
          tags: ${{ secrets.ACR_REGISTRY }}/backend:latest, ${{ secrets.ACR_REGISTRY }}/backend:${{ github.sha }}
          build-args: |
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            PORT=${{ secrets.PORT }}
            CLIENT_ORIGIN=${{ secrets.CLIENT_ORIGIN }} # Beachte: Wird idealerweise in ACA gesetzt

      - name: Build and push Frontend Image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: Dockerfile.frontend
          push: true
          tags: ${{ secrets.ACR_REGISTRY }}/frontend:latest
          build-args: |
            VITE_API_URL=${{ secrets.VITE_API_URL }}
            VITE_CLIENT_URL=${{ secrets.VITE_CLIENT_URL }}

      - name: Azure Logout
        run: az logout